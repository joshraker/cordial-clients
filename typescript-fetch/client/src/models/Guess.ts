/* tslint:disable */
/* eslint-disable */
/**
 * Cordial
 * A cooperative word puzzle game!
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Guess
 */
export interface Guess {
    /**
     * 
     * @type {number}
     * @memberof Guess
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Guess
     */
    discardedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Guess
     */
    word?: string;
    /**
     * 
     * @type {number}
     * @memberof Guess
     */
    gameId?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof Guess
     */
    comparison?: Array<GuessComparisonEnum>;
}


/**
 * @export
 */
export const GuessComparisonEnum = {
    NOT_PRESENT: -1,
    INCORRECT_PLACEMENT: 0,
    CORRECT_PLACEMENT: 1
} as const;
export type GuessComparisonEnum = typeof GuessComparisonEnum[keyof typeof GuessComparisonEnum];


/**
 * Check if a given object implements the Guess interface.
 */
export function instanceOfGuess(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GuessFromJSON(json: any): Guess {
    return GuessFromJSONTyped(json, false);
}

export function GuessFromJSONTyped(json: any, ignoreDiscriminator: boolean): Guess {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'discardedAt': !exists(json, 'discardedAt') ? undefined : (json['discardedAt'] === null ? null : new Date(json['discardedAt'])),
        'word': !exists(json, 'word') ? undefined : json['word'],
        'gameId': !exists(json, 'gameId') ? undefined : json['gameId'],
        'comparison': !exists(json, 'comparison') ? undefined : json['comparison'],
    };
}

export function GuessToJSON(value?: Guess | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'discardedAt': value.discardedAt === undefined ? undefined : (value.discardedAt === null ? null : value.discardedAt.toISOString()),
        'word': value.word,
        'gameId': value.gameId,
        'comparison': value.comparison,
    };
}

